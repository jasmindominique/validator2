{"version":3,"sources":["phone-validator.js"],"names":["PhoneValidator","parameters","event","console","log","value","target","test","isValid","options","nonAmerican","Validator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;IAAMA,c;;;;;AACF,0BAAYC,UAAZ,EAAwB;AAAA;;AAAA;;AACpB,8BAAMA,UAAN;;AADoB,+DAOb,UAACC,KAAD,EAAW;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;;AACA,mJAAqBA,KAArB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDF,KAArD;AAEA,UAAMG,KAAK,GAAGH,KAAK,CAACI,MAAN,CAAaD,KAA3B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;;AACA,UAAI,gDAAgDE,IAAhD,CAAqDF,KAArD,CAAJ,EAAiE;AAC7D,cAAKG,OAAL,GAAe,IAAf;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,OAHD,MAGO;AACH,cAAKI,OAAL,GAAe,KAAf;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH;;AACD,qJAAoBF,KAApB;AACH,KAtBuB;;AAEpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,MAAKK,OAArC;AAEAN,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgD,MAAKK,OAAL,CAAaC,WAA7D;AAJoB;AAKvB;;;EANwBC,S","sourcesContent":["class PhoneValidator extends Validator {\n    constructor(parameters) {\n        super(parameters)\n        console.log('PhoneValidator()', this.options)\n\n        console.log('looking for non-american phones?', this.options.nonAmerican)\n    }\n\n    validate = (event) => {\n        console.log('PhoneValidator.validate', event)\n        super.validateBefore(event)\n        console.log('running validation for PhoneValidator', event)\n\n        const value = event.target.value\n        console.log('value', value)\n        if (/^\\s*\\(?\\d{3}\\)?[\\-\\. ]?\\d{3}[\\-\\. ]?\\d{4}\\s*$/.test(value)) {\n            this.isValid = true\n            console.log('valid phone number!')\n        } else {\n            this.isValid = false\n            console.log('not a valid phone number')\n        }\n        super.validateAfter(event)\n    }\n}\n"],"file":"phone-validator.js"}